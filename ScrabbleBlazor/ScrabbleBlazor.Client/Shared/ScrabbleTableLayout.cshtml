@inherits BlazorLayoutComponent
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using ScrabbleBlazor.Shared
@using ScrabbleBlazor.Shared.Model;
@inject HttpClient Http
@inject LocalStorage Storage

<h1>@Title</h1>

@if (@TableModel == null)
{
    <p><em>Loading table...</em></p>
}
else
{
    <table class="table table-bordered">
        <tbody>
            @foreach (var x in TableModel)
            {
                @for (var i = 0; i < x.Squares.Count; i++)
                {
                    var list = x.Squares[i];
                    <tr>
                        @for (var j = 0; j < list.Count; j++)
                        {
                            var localI = i;
                            var localJ = j;
                            <td style="width:45px;height:45px" onclick="@((ev) => Clicked(ev, localI, localJ))">@list[j].Letter</td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
}

@functions {
    [Parameter]
    string Title { get; set; }

    [Parameter]
    List<Table> TableModel { get; set; }

    [Parameter]
    Player CurrentPlayer { get; set; }

    private Letter selectedPlayerLetter;

    private string slectedrow = null;

    void Clicked(UIEventArgs args, int localI, int localJ)
    {
        var letterffromstorage = Storage["LetterSelected"];
        if(letterffromstorage != null)
        {
            Console.WriteLine(letterffromstorage);
            selectedPlayerLetter = new Letter(letterffromstorage, 0);
            Console.WriteLine("selected letter: " + selectedPlayerLetter);
            TableSquare updatedSquare = new TableSquare(selectedPlayerLetter.Value);
            TableModel[0].Squares[localI][localJ] = updatedSquare;
            StateHasChanged();
            Storage["LetterSelected"] = string.Empty;
            Console.WriteLine(localI);
            Console.WriteLine(localJ);
        }
    }
}