@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using ScrabbleBlazor.Shared.Model;

@using ScrabbleBlazor.Client.Services;
@inject LocalStorage Storage

@inject GameState GameState

@if (Player != null)
{
    foreach (var item in Player.OwnLetters)
    {
        <button type="button" style="visibility: @(item.IsSelected ? "hidden" : "visible")" onclick=@(() => OnSelectLetter(item))>
            <span style="font-size:20px;">@item.Value</span>
            <span style="font-size:10px;">@item.Score</span>
        </button>
    }
}

<button type="button" onclick=@(() => OnSubmitWord())></button>

@functions {

    [Parameter] Player Player { get; set; }

    void OnSelectLetter(Letter letter)
    {
        letter.IsSelected = !letter.IsSelected;
        if (Storage["CurrentWord"] != null)
        {
            Storage["CurrentWord"] = Storage["CurrentWord"] + letter.Value;
        }
        else
        {
            Storage["CurrentWord"] = letter.Value.ToString();
        }
    }


    protected async Task OnSubmitWord()
    {
        await GameState.SubmitWord(Player.Identifier, Storage["CurrentWord"]);


        if (Storage["CurrentWord"] != null)
        {
            Storage["CurrentWord"] = string.Empty;
        }
    }

}